{
    "info": {
        "_postman_id": "f367b534-c9ea-e7c5-1f46-7a27dc6a30ba",
        "name": "Commercetools Machine Learning API",
        "description": "# commercetools API Postman collection\n\nThis Postman collection contains examples of requests and responses for most endpoints and commands of the\nCommercetools Machine Learning API. For every command the smallest possible payload is given. Please find optional\nfields in the related official documentation. Additionally the collection provides example requests and\nresponses for specific tasks and more complex data models.\n\n## Disclaimer\n\nThis is not the official Commercetools Machine Learning API documentation. Please see [here](http:\/\/docs.commercetools.com\/)\nfor a complete and approved documentation of the Commercetools Machine Learning API.\n\n## How to use\n\n**:warning: Be aware that postman automatically synchronizes environment variables (including your API client credentials) to your workspace if logged in.\nUse this collection only for development purposes and non-production projects.**\n\nTo use this collection in Postman please perform the following steps:\n\n1. Download and install the Postman Client\n2. Import the [collection.json](https:\/\/github.com\/commercetools\/commercetools-postman-api-examples\/raw\/master\/collection.json) and [template.json](https:\/\/github.com\/commercetools\/commercetools-postman-api-examples\/raw\/master\/template.json) in your postman application\n3. In the Merchant Center, create a new API Client and fill in the client credentials in your environment\n4. Obtain an access token by sending the \"Authorization\/Obtain access token\" request at the bottom of the request list. Now you can use all other endpoints\n\nFeel free to clone and modify this collection to your needs.\n\nTo automate frequent tasks the collection automatically manages commonly required values and parameters such\nas resource ids, keys and versions in Postman environment variables for you.\n\nPlease see http:\/\/docs.commercetools.com\/ for further information about the commercetools Plattform.",
        "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
    },
    "auth":
        {
            "type": "oauth2",
            "oauth2": {
                "accessToken": "{{ctp_access_token}}",
                "addTokenTo": "header",
                "tokenType": "Bearer"
            }
        },
    "item": [
        {
            "name": "Authorization",
            "description": "Authorization",
            "item": [
                {
                    "name": "Obtain access token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Obtain access token through password flow",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "",
                                "value": "",
                                "disabled": true
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/customers/token?grant_type=password&username={{user_email}}&password={{user_password}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "customers",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "password",
                                    "equals": true
                                },
                                {
                                    "key": "username",
                                    "value": "",
                                    "equals": true
                                },
                                {
                                    "key": "password",
                                    "value": "",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Password Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id, client_secret, user_email and user_password to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token for Anonymous Sessions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/anonymous/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "anonymous",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for a anonymous session. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token Introspection",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/introspect?token={{ctp_access_token}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "introspect"
                            ],
                            "query": [
                                {
                                    "key": "token",
                                    "value": "{{ctp_access_token}}",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Token introspection allows to determine the active state of an OAuth 2.0 access token and to determine meta-information about this accces token, such as the `scope`."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "",
            "description": "null",
            "item": [
                {
                    "name": "Image-search",
                    "description": "Search for similar products using an image as search input.\n",
                    "item": [
                        {
                            "name": "get ByProjectKeyImageSearchConfig",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"config-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"config-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"config-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"config-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"config-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"config-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/image-search/config",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "image-search",
                                        "config"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Get the current image search config.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "post ByProjectKeyImageSearchConfig",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"config-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"config-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"config-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"config-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"config-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"config-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/image-search/config",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "image-search",
                                        "config"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Endpoint to update the image search config.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "post ByProjectKeyImageSearch",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"image-search-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"image-search-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"image-search-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"image-search-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"image-search-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"image-search-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/image-search",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "image-search"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "offset",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        }
                                    ]
                                },
                                "description": "Accepts an image file and returns similar products from product catalogue.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Recommendations",
                    "description": "null",
                    "item": [
                        {
                            "name": "Project-categories",
                            "description": "null",
                            "item": [
                                {
                                    "name": "get ByProjectKeyRecommendationsProjectCategoriesByProductId",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"project-category-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"project-category-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"project-category-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"project-category-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"project-category-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"project-category-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/recommendations/project-categories/{{product-id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "recommendations",
                                                "project-categories",
                                                "{{product-id}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "staged",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "confidenceMin",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "confidenceMax",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Response Representation: PagedQueryResult with a results array of ProjectCategoryrecommendation, sorted by confidence scores in descending order and the meta information of ProjectCategoryrecommendationMeta.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "get ByProjectKeyRecommendationsGeneralCategories",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"general-category-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"general-category-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"general-category-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"general-category-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"general-category-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"general-category-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/recommendations/general-categories",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "recommendations",
                                        "general-categories"
                                    ],
                                    "query": [
                                        {
                                            "key": "productImageUrl",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "productName",
                                            "value": "",
                                            "equals": true,
                                            "disabled": false
                                        },
                                        {
                                            "key": "limit",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "offset",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "confidenceMin",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "confidenceMax",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        }
                                    ]
                                },
                                "description": "This endpoint takes arbitrary product names or image URLs and generates recommendations from a general set of categories, which cover a broad range of industries. The full list of supported categories can be found [here](https:\/\/docs.commercetools.com\/category_recommendations_supported_categories.txt). These are independent of the categories that are actually defined in your project. The main  purpose of this API is to provide a quick way to test the behavior of the category recommendations engine for different names and images. In contrast to the [project-specific endpoint](https:\/\/docs.commercetools.com\/http-api-projects-categoryrecommendations#project-specific-category-recommendations), this endpoint does not have [activation criteria](https:\/\/docs.commercetools.com\/http-api-projects-categoryrecommendations#activating-the-api) and is enabled for all projects.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Missing-data",
                    "description": "null",
                    "item": [
                        {
                            "name": "Attributes",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Status",
                                    "description": "null",
                                    "item": [
                                        {
                                            "name": "get ByProjectKeyMissingDataAttributesStatusByTaskId",
                                            "event": [
                                                {
                                                    "listen": "test",
                                                    "script": {
                                                        "type": "text/javascript",
                                                        "exec": [
                                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                            "var data = JSON.parse(responseBody);",
                                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                            "    pm.environment.set(\"statu-id\", data.results[0].id); ",
                                                            "    pm.environment.set(\"statu-version\", data.results[0].version);",
                                                            "}",
                                                            "if(data.results && data.results[0] && data.results[0].key){",
                                                            "    pm.environment.set(\"statu-key\", data.results[0].key); ",
                                                            "}",
                                                            "if(data.version){",
                                                            "    pm.environment.set(\"statu-version\", data.version);",
                                                            "}",
                                                            "if(data.id){",
                                                            "    pm.environment.set(\"statu-id\", data.id); ",
                                                            "}",
                                                            "if(data.key){",
                                                            "    pm.environment.set(\"statu-key\", data.key);",
                                                            "}",
                                                            ""
                                                        ]
                                                    }
                                                }
                                            ],
                                            "request": {
                                                "auth":
                                                    {
                                                        "type": "oauth2",
                                                        "oauth2": {
                                                            "accessToken": "{{ctp_access_token}}",
                                                            "addTokenTo": "header",
                                                            "tokenType": "Bearer"
                                                        }
                                                    },
                                                "method": "get",
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{host}}/{{project-key}}/missing-data/attributes/status/{{task-id}}",
                                                    "host": [
                                                        "{{host}}"
                                                    ],
                                                    "path": [
                                                        "{{project-key}}",
                                                        "missing-data",
                                                        "attributes",
                                                        "status",
                                                        "{{task-id}}"
                                                    ],
                                                    "query": [
                                                    ]
                                                },
                                                "description": "null",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": ""
                                                }
                                            },
                                            "response": []
                                        }
                                    ]
                                },
                                {
                                    "name": "post ByProjectKeyMissingDataAttributes",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"attribute-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"attribute-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"attribute-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"attribute-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"attribute-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"attribute-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/missing-data/attributes",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "missing-data",
                                                "attributes"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "null",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Images",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Status",
                                    "description": "null",
                                    "item": [
                                        {
                                            "name": "get ByProjectKeyMissingDataImagesStatusByTaskId",
                                            "event": [
                                                {
                                                    "listen": "test",
                                                    "script": {
                                                        "type": "text/javascript",
                                                        "exec": [
                                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                            "var data = JSON.parse(responseBody);",
                                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                            "    pm.environment.set(\"statu-id\", data.results[0].id); ",
                                                            "    pm.environment.set(\"statu-version\", data.results[0].version);",
                                                            "}",
                                                            "if(data.results && data.results[0] && data.results[0].key){",
                                                            "    pm.environment.set(\"statu-key\", data.results[0].key); ",
                                                            "}",
                                                            "if(data.version){",
                                                            "    pm.environment.set(\"statu-version\", data.version);",
                                                            "}",
                                                            "if(data.id){",
                                                            "    pm.environment.set(\"statu-id\", data.id); ",
                                                            "}",
                                                            "if(data.key){",
                                                            "    pm.environment.set(\"statu-key\", data.key);",
                                                            "}",
                                                            ""
                                                        ]
                                                    }
                                                }
                                            ],
                                            "request": {
                                                "auth":
                                                    {
                                                        "type": "oauth2",
                                                        "oauth2": {
                                                            "accessToken": "{{ctp_access_token}}",
                                                            "addTokenTo": "header",
                                                            "tokenType": "Bearer"
                                                        }
                                                    },
                                                "method": "get",
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{host}}/{{project-key}}/missing-data/images/status/{{task-id}}",
                                                    "host": [
                                                        "{{host}}"
                                                    ],
                                                    "path": [
                                                        "{{project-key}}",
                                                        "missing-data",
                                                        "images",
                                                        "status",
                                                        "{{task-id}}"
                                                    ],
                                                    "query": [
                                                    ]
                                                },
                                                "description": "null",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": ""
                                                }
                                            },
                                            "response": []
                                        }
                                    ]
                                },
                                {
                                    "name": "post ByProjectKeyMissingDataImages",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"image-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"image-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"image-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"image-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"image-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"image-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/missing-data/images",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "missing-data",
                                                "images"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "null",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Prices",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Status",
                                    "description": "null",
                                    "item": [
                                        {
                                            "name": "get ByProjectKeyMissingDataPricesStatusByTaskId",
                                            "event": [
                                                {
                                                    "listen": "test",
                                                    "script": {
                                                        "type": "text/javascript",
                                                        "exec": [
                                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                            "var data = JSON.parse(responseBody);",
                                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                            "    pm.environment.set(\"statu-id\", data.results[0].id); ",
                                                            "    pm.environment.set(\"statu-version\", data.results[0].version);",
                                                            "}",
                                                            "if(data.results && data.results[0] && data.results[0].key){",
                                                            "    pm.environment.set(\"statu-key\", data.results[0].key); ",
                                                            "}",
                                                            "if(data.version){",
                                                            "    pm.environment.set(\"statu-version\", data.version);",
                                                            "}",
                                                            "if(data.id){",
                                                            "    pm.environment.set(\"statu-id\", data.id); ",
                                                            "}",
                                                            "if(data.key){",
                                                            "    pm.environment.set(\"statu-key\", data.key);",
                                                            "}",
                                                            ""
                                                        ]
                                                    }
                                                }
                                            ],
                                            "request": {
                                                "auth":
                                                    {
                                                        "type": "oauth2",
                                                        "oauth2": {
                                                            "accessToken": "{{ctp_access_token}}",
                                                            "addTokenTo": "header",
                                                            "tokenType": "Bearer"
                                                        }
                                                    },
                                                "method": "get",
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{host}}/{{project-key}}/missing-data/prices/status/{{task-id}}",
                                                    "host": [
                                                        "{{host}}"
                                                    ],
                                                    "path": [
                                                        "{{project-key}}",
                                                        "missing-data",
                                                        "prices",
                                                        "status",
                                                        "{{task-id}}"
                                                    ],
                                                    "query": [
                                                    ]
                                                },
                                                "description": "null",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": ""
                                                }
                                            },
                                            "response": []
                                        }
                                    ]
                                },
                                {
                                    "name": "post ByProjectKeyMissingDataPrices",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"price-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"price-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"price-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"price-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"price-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"price-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/missing-data/prices",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "missing-data",
                                                "prices"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "null",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Similarities",
                    "description": "null",
                    "item": [
                        {
                            "name": "Products",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Status",
                                    "description": "null",
                                    "item": [
                                        {
                                            "name": "get ByProjectKeySimilaritiesProductsStatusByTaskId",
                                            "event": [
                                                {
                                                    "listen": "test",
                                                    "script": {
                                                        "type": "text/javascript",
                                                        "exec": [
                                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                            "var data = JSON.parse(responseBody);",
                                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                            "    pm.environment.set(\"statu-id\", data.results[0].id); ",
                                                            "    pm.environment.set(\"statu-version\", data.results[0].version);",
                                                            "}",
                                                            "if(data.results && data.results[0] && data.results[0].key){",
                                                            "    pm.environment.set(\"statu-key\", data.results[0].key); ",
                                                            "}",
                                                            "if(data.version){",
                                                            "    pm.environment.set(\"statu-version\", data.version);",
                                                            "}",
                                                            "if(data.id){",
                                                            "    pm.environment.set(\"statu-id\", data.id); ",
                                                            "}",
                                                            "if(data.key){",
                                                            "    pm.environment.set(\"statu-key\", data.key);",
                                                            "}",
                                                            ""
                                                        ]
                                                    }
                                                }
                                            ],
                                            "request": {
                                                "auth":
                                                    {
                                                        "type": "oauth2",
                                                        "oauth2": {
                                                            "accessToken": "{{ctp_access_token}}",
                                                            "addTokenTo": "header",
                                                            "tokenType": "Bearer"
                                                        }
                                                    },
                                                "method": "get",
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{host}}/{{project-key}}/similarities/products/status/{{task-id}}",
                                                    "host": [
                                                        "{{host}}"
                                                    ],
                                                    "path": [
                                                        "{{project-key}}",
                                                        "similarities",
                                                        "products",
                                                        "status",
                                                        "{{task-id}}"
                                                    ],
                                                    "query": [
                                                    ]
                                                },
                                                "description": "null",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": ""
                                                }
                                            },
                                            "response": []
                                        }
                                    ]
                                },
                                {
                                    "name": "post ByProjectKeySimilaritiesProducts",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"product-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"product-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"product-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"product-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"product-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"product-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/similarities/products",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "similarities",
                                                "products"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "null",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}
